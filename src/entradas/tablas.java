/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package entradas;

import static java.awt.image.ImageObserver.WIDTH;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class tablas extends javax.swing.JFrame {
    /**
     * Creates new form tablas
     */
    String nombrevent="Resultados";
   String  etiqh = "Visitas";
      String        etiver="Tiempo";
        String              namegrafi="Grafico ";
String fecha;
    public tablas() {      
        initComponents();
        buttonGroup1.add(d);
        buttonGroup1.add(m);
        buttonGroup1.add(a);
        d.setSelected(true);
        setSize(500, 500);
        elaño.setVisible(false);
        elmes.setVisible(false);
        eldia.setVisible(true);
        
        Date fechaactual = new Date();       
        this.eldia.setDate(fechaactual);
        setLocationRelativeTo(null);
        setResizable(false);
      conexioninicio ci = new conexioninicio();
     ci.conectar();
     Connection con = ci.getConnection();
     try
    {
       DefaultTableModel modelo = new DefaultTableModel();
       this.tablasm.setModel(modelo);
       tablasGraficas tg=new tablasGraficas();
       ResultSetMetaData rsMd = tg.datos(new Consultas().getEntradasHoy(), con);
       ResultSet rs=tg.getRS();
       int cantidadColumnas = tg.cantidadcolumnas();
       for (int i = 1; i <= cantidadColumnas; ++i) {
         modelo.addColumn(rsMd.getColumnLabel(i));
       }
       while (rs.next()) {
         Object[] fila = new Object[cantidadColumnas];
         for (int i = 0; i < cantidadColumnas; ++i)
         {
           fila[i] = rs.getObject(i + 1);
         }
         modelo.addRow(fila);
       }
       rs.close();
       con.close();
     }
     catch (SQLException e)
     {
       if (con == null)
         return;
       JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 0);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablasm = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        d = new javax.swing.JRadioButton();
        m = new javax.swing.JRadioButton();
        a = new javax.swing.JRadioButton();
        t = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        eldia = new com.toedter.calendar.JDateChooser();
        elmes = new com.toedter.calendar.JMonthChooser();
        elaño = new com.toedter.calendar.JYearChooser();
        jButton1 = new javax.swing.JButton();
        graf = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablasm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablasm);

        d.setText("Día");
        d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dActionPerformed(evt);
            }
        });

        m.setText("Mes");
        m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mActionPerformed(evt);
            }
        });

        a.setText("Año");
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });

        t.setText("Total");
        t.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tActionPerformed(evt);
            }
        });

        jLabel1.setText("Ver en tabla");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        eldia.setDateFormatString("yyyy/MM/dd");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        graf.setText("Ver gráfica");
        graf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grafActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Guardar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(199, 199, 199)
                                        .addComponent(d)
                                        .addGap(18, 18, 18)
                                        .addComponent(m)
                                        .addGap(17, 17, 17)
                                        .addComponent(a)
                                        .addGap(184, 184, 184)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(214, 214, 214)
                                        .addComponent(t)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(graf)))
                                .addGap(0, 162, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eldia, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(elmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(elaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(m, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(a)
                        .addComponent(d, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t)
                            .addComponent(graf))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addComponent(jLabel1))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(elmes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(elaño, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jButton1))))
                    .addComponent(eldia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        String cons=new Consultas().getEntradasAñoCarrera();
        if(t.isSelected())
        {
            cons=new Consultas().getEntradasAñoTotal();
        }
       this.mostrartabla(cons);
       this.getstatusFecha(); 
    }//GEN-LAST:event_aActionPerformed

    private void dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dActionPerformed

        String cons=new Consultas().getEntradasDiaCarrera();
        if(t.isSelected())
        {
            cons=new Consultas().getEntradasDiaTotal();
            
        }
        this.mostrartabla(cons);
        this.getstatusFecha();
       // TODO add your handling code here:
    }//GEN-LAST:event_dActionPerformed

    private void mActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mActionPerformed
        String cons=new Consultas().getEntradasMesCarrera();
        if(t.isSelected())
        {
            cons=new Consultas().getEntradasMesTotal();
        }
       this.mostrartabla(cons);
       this.getstatusFecha();        
    }//GEN-LAST:event_mActionPerformed

    private void tActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tActionPerformed
 if(!a.isSelected()&&!m.isSelected()&&!d.isSelected()) { 
}
    else{
           String cons=null;
            if(a.isSelected()&& this.t.isSelected())
   {
      cons=new Consultas().getEntradasAñoTotal();
      
   }   
   else if(m.isSelected()&& this.t.isSelected())
   {
       cons=new Consultas().getEntradasMesTotal();
   }
   else if(d.isSelected()&& this.t.isSelected())
   {
       cons=new Consultas().getEntradasDiaTotal();
   }
            else if(a.isSelected()&& !this.t.isSelected())
   {
       cons=new Consultas().getEntradasAñoCarrera();
   }
             else if(m.isSelected()&& !this.t.isSelected())
   {
       cons=new Consultas().getEntradasMesCarrera();
   }
            else
             {
             cons=new Consultas().getEntradasDiaCarrera();
             }
        mostrartabla(cons);
       }
    }//GEN-LAST:event_tActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
try{
    MessageFormat headerFormat=new MessageFormat("imprimir");
    MessageFormat footerFormat=new MessageFormat("imprimir");
    tablasm.print(JTable.PrintMode.NORMAL,headerFormat,footerFormat);
    
}catch(PrinterException ex)
{
  Logger.getLogger(tablas.class.getName()).log(Level.SEVERE, null, ex);   
}
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 if(!a.isSelected()&&!m.isSelected()&&!d.isSelected()) { 
}
    else{
           String cons=null;
            if(a.isSelected()&& this.t.isSelected())
   {
       int añ=(elaño.getYear());
      cons=new Consultas().getEntradasAñoTotalcom(añ);
   }   
   else if(m.isSelected()&& this.t.isSelected())
   {
       int añ=(elaño.getYear());
       int ms=(elmes.getMonth()+1);
       cons=new Consultas().getEntradasMesTotalcom(añ , ms);
   }
   else if(d.isSelected()&& this.t.isSelected())
   {
       int añosss=this.eldia.getCalendar().get(Calendar.YEAR);
                int messs=this.eldia.getCalendar().get(Calendar.MONTH);
                int diaasss=this.eldia.getCalendar().get(Calendar.DATE);
       cons=new Consultas().getEntradasDiaTotalcom(añosss, messs, diaasss);
   }
            else if(a.isSelected()&& !this.t.isSelected())
   {
       int añ=(elaño.getYear());
       cons=new Consultas().getEntradasAñoCarreraBus(añ);  
   }             else if(m.isSelected()&& !this.t.isSelected())
   {
       int añ=(elaño.getYear());
       int ms=(elmes.getMonth()+1);
       cons=new Consultas().getEntradasMesCarreraBus(añ, ms);
   }
            else
             {
                 int añosss=this.eldia.getCalendar().get(Calendar.YEAR);
                int messs=this.eldia.getCalendar().get(Calendar.MONTH);
                int diaasss=this.eldia.getCalendar().get(Calendar.DATE);
             cons=new Consultas().getEntradasDiaCarreraBus(añosss, messs, diaasss);
             }
        mostrartabla(cons);
       }       // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
public String getNameMes(int mes){
    String meses[]={"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"};
    return meses[mes-1];
    
}
    private void grafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grafActionPerformed
if(!a.isSelected()&&!m.isSelected()&&!d.isSelected()) { 
}
else if(m.isSelected()&&t.isSelected()||d.isSelected()&&t.isSelected()||a.isSelected()&&t.isSelected()){
           String cons=null;
             if(m.isSelected()&&t.isSelected())
   {
       cons=new Consultas().getEntradasMesTotal();
   }
   else if(d.isSelected()&&t.isSelected())
   {
       cons=new Consultas().getEntradasDiaTotal();
   }
            else if(a.isSelected()&&t.isSelected())
   {
       int añ=(elaño.getYear());
       cons=new Consultas().getEntradasAñoTotal();
       fecha= " del "+ añ;
   }
new GeneraGrafica().recibirparametros(cons, nombrevent,etiqh,etiver, 0, namegrafi ," ");
       }
   else if((a.isSelected() && !t.isSelected())||(m.isSelected() &&! t.isSelected())||(d.isSelected() && !t.isSelected())){
    JOptionPane.showMessageDialog(rootPane, "Vaya al la opcion de graficas del menu principal para vizualizar esta grafica", "No disponible", WIDTH);
}   
             else
   {
    JOptionPane.showMessageDialog(rootPane, "No hay grafica para esta opcion", "No disponible", WIDTH);   
   }
        
    }//GEN-LAST:event_grafActionPerformed
/**public int getvalorButon()
{
    int buton=1;

 if(b.isSelected())
{
    buton=1;
}
else
{
    buton=2;
}
return buton;
}*/
public void getstatusFecha()
{
    if(d.isSelected())
    {
      elaño.setVisible(false);
        elmes.setVisible(false);
        eldia.setVisible(true);  
    }
    else if(m.isSelected())
    {
       elaño.setVisible(true);
        elmes.setVisible(true);
        eldia.setVisible(false); 
    }
    else
    {
        elaño.setVisible(true);
        elmes.setVisible(false);
        eldia.setVisible(false);
    }
}

    public  void mostrartabla(String consulta){
         conexioninicio ci = new conexioninicio();
         ci.conectar();
     Connection con = ci.getConnection();
     try
     {
       DefaultTableModel modelo = new DefaultTableModel();
       this.tablasm.setModel(modelo);    
      ResultSet rs = new tablasGraficas().tablas(consulta, con);
       ResultSetMetaData rsMd = rs.getMetaData();
       int cantidadColumnas = rsMd.getColumnCount();
       for (int i = 1; i <= cantidadColumnas; ++i) {
         modelo.addColumn(rsMd.getColumnLabel(i));
       }
       while (rs.next()) {
         Object[] fila = new Object[cantidadColumnas];
         for (int i = 0; i < cantidadColumnas; ++i)
         {
           fila[i] = rs.getObject(i + 1);
         }
         modelo.addRow(fila);
       }
       rs.close();
       con.close();
     }
     catch (SQLException e)
     {
       if (con == null)
         return;
       JOptionPane.showMessageDialog(null, e.getMessage(), "Error", 0);
    }
    }
    /**
     * @param args the command line arguments
     */
    public  void mostrar() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tablas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tablas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tablas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tablas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new tablas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton a;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton d;
    private com.toedter.calendar.JYearChooser elaño;
    private com.toedter.calendar.JDateChooser eldia;
    private com.toedter.calendar.JMonthChooser elmes;
    private javax.swing.JButton graf;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton m;
    private javax.swing.JRadioButton t;
    private javax.swing.JTable tablasm;
    // End of variables declaration//GEN-END:variables
}
